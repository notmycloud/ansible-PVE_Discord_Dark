# https://github.com/Weilbyte/PVEDiscordDark/issues/38
- name: "Create {{ theme_basedir }} if it does not exist"
  ansible.builtin.file:
    path: "{{ theme_basedir }}"
    state: directory
    mode: 0755

- name: "Get latest version"
  ansible.builtin.block:
    - name: Determine latest GitHub release
      delegate_to: localhost
      become: false
      ansible.builtin.uri:
        url: "https://api.github.com/repos/Weilbyte/{{ theme_name }}/releases/latest"
        body_format: json
      register: _github_release
      until: _github_release.status == 200
      retries: 5

    - name: Set Theme Version
      ansible.builtin.set_fact:
        theme_version: "{{ _github_release.json.tag_name | regex_replace('^v?(.*)$', '\\1') }}"

  when: theme_version == 'latest'
  run_once: true

- name: Check for New/Updated {{ theme_name }} components
  ansible.builtin.get_url:
    url: "{{ item }}"
    dest: "{{ theme_basedir }}/{{ item | basename }}"
    mode: 0644
  register: theme_updated
  loop:
    - "{{ theme_repo }}/{{ theme_version }}/{{ theme_name }}.sh"
    - "{{ theme_repo }}/{{ theme_version }}/{{ theme_name }}/sass/{{ theme_name }}.css"
    - "{{ theme_repo }}/{{ theme_version }}/{{ theme_name }}/js/{{ theme_name }}.js"

- name: "Install/Update {{ theme_name }}"
  ansible.builtin.block:
  - name: Check if theme is installed
    ansible.builtin.stat:
      path: /usr/share/pve-manager/css/dd_style.css
    register: theme_installed

  - name: uninstall old theme
    ansible.builtin.command: "/usr/bin/env bash {{ theme_basedir }}/{{ theme_name }}.sh uninstall"
    when: theme_installed.stat.exists

  - name: install new theme
    ansible.builtin.command: "/usr/bin/env bash {{ theme_basedir }}/{{ theme_name }}.sh install"

  when: theme_updated.changed